openapi: 3.0.0
info:
  title: TrueNAS RESTful API
  description: Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator
    https://github.com/openapitools/openapi-generator)
  version: v2.0
paths:
  /pool:
    get:
      operationId: listPools
      security:
      - bearerAuth: []
      tags:
      - pool
      responses:
        '200':
          description: 'A list of pools'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
  /pool/dataset:
    get:
      operationId: listDatasets
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetResponse'
          description: A list of datasets
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    post:
      tags:
      - dataset
      operationId: createDataset
      security:
      - bearerAuth: []
      description: |-
        Creates a dataset/zvol.

        `volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.
        `sparse` and `volblocksize` are only used for type=VOLUME.

        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.
        There are 2 cases where ZFS encryption is not allowed for a dataset:
        1) Pool in question is GELI encrypted.
        2) If the parent dataset is encrypted with a passphrase and `name` is being created
          with a key for encrypting the dataset.

        `encryption_options` specifies configuration for encryption of dataset for `name` pool.
        `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase
        as a key.
        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
        `encryption_options.generate_key` when enabled automatically generates the key to be used
        for dataset encryption.

        It should be noted that keys are stored by the system for automatic locking/unlocking
        on import/export of encrypted datasets. If that is not desired, dataset should be created
        with a passphrase as a key.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetParams'
      responses:
        '200':
          description: 'Dataset details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /pool/dataset/id/{id}:
    get:
      tags:
      - dataset
      operationId: getDataset
      security:
      - bearerAuth: []
      description: |-
        Query Pool Datasets with `query-filters` and `query-options`.

        We provide two ways to retrieve datasets. The first is a flat structure (default), where
        all datasets in the system are returned as separate objects which contain all data
        there is for their children. This retrieval type is slightly slower because of duplicates in each object.
        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the
        children in the `children` key. This retrieval type is slightly faster.
        These options are controlled by the `query-options.extra.flat` attribute (default true).
      parameters:
      - name: id
        in: path
        description: ID of the dataset
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: 'Dataset details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
      - dataset
      operationId: updateDataset
      security:
      - bearerAuth: []
      description: Update dataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetParams'
      responses:
        '200':
          description: 'Dataset details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
      - dataset
      operationId: deleteDataset
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      description: |-
        Delete dataset/zvol

        `recursive` will also delete/destroy all children datasets.
        `force` will force delete busy datasets.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /cronjob/id/{id}:
    get:
      tags:
      - cronjob
      operationId: getCronJob
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the cronjob
        required: true
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: 'CronJob details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
      - cronjob
      operationId: deleteCronJob
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the cronjob
        required: true
        schema:
          type: integer
      responses:
        '200':
          $ref: '#/components/responses/Success'

        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
      - cronjob
      operationId: updateCronJob
      description: Update cronjob
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronjobParams'
      responses:
        '200':
          description: 'CronJob details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /cronjob:
    post:
      tags:
      - cronjob
      operationId: createCronJob
      security:
      - bearerAuth: []
      description: |-
        Create a new cron job.

        `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress
        standard error / standard output respectively.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronjobParams'
      responses:
        '200':
          description: 'CronJob details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /group:
    get:
      tags:
      - group
      operationId: listGroups
      description: Get a list of (local) groups
      # description: |-
      #   Query groups with `query-filters` and `query-options`. As a performance optimization, only local groups
      #   will be queried by default.

      #   Groups from directory services such as NIS, LDAP, or Active Directory will be included in query results
      #   if the option `{'extra': {'search_dscache': True}}` is specified.
      security:
      - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/GroupsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
    post:
      tags:
      - group
      operationId: createGroup
      description: |-
        Create a new group.

        If `gid` is not provided it is automatically filled with the next one available.

        `allow_duplicate_gid` allows distinct group names to share the same gid.

        `users` is a list of user ids (`id` attribute from `user.query`).

        `smb` specifies whether the group should be mapped into an NT group.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'Group details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupParams'
  '/group/id/{id}':
    delete:
      tags:
      - group
      operationId: deleteGroup
      description: |-
        Delete group `id`.

        The `delete_users` option deletes all users that have this group as their primary group.
      security:
      - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupParams'
    get:
      tags:
      - group
      operationId: getGroup
      description: Get group of `id`.
      # description: |-
      #   Query groups with `query-filters` and `query-options`. As a performance optimization, only local groups
      #   will be queried by default.

      #   Groups from directory services such as NIS, LDAP, or Active Directory will be included in query results
      #   if the option `{'extra': {'search_dscache': True}}` is specified.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'Group details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
      - group
      operationId: updateGroup
      description: Update attributes of an existing group.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'Group details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              # Same payload as create group
              $ref: '#/components/schemas/CreateGroupParams'
  /network/configuration:
    get:
      tags:
      - network
      operationId: getNetworkConfiguration
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: 'General network configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /network/general/summary:
    get:
      tags:
      - network
      operationId: getNetworkSummary
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: 'General network summary'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /service/id/{id}:
    get:
      tags:
      - service
      operationId: getService
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the cronjob
        required: true
        schema:
          type: integer
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: 'Service details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /sharing/nfs:
    get:
      tags:
      - sharing
      operationId: listSharesNFS
      description: Get a list of NFS shares
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'List of NFS shares'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesNFSResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
    post:
      tags:
      - sharing
      operationId: createShareNFS
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'NFS share details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters: []
      description: |-
        Create a new NFS Share.

        `paths` is a list of valid paths which are configured to be shared on this share.

        `networks` is a list of authorized networks that are allowed to access the share having format
        "network/mask" CIDR notation. If empty, all networks are allowed.

        `hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are
        allowed.

        `alldirs` is a boolean value which when set indicates that the client can mount any subdirectories of the
        selected pool or dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareNFSParams'
  '/sharing/nfs/id/{id}':
    delete:
      tags:
      - sharing
      operationId: removeShareNFS
      description: Delete NFS Share of `id`.
      security:
      - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
      - sharing
      operationId: getShareNFS
      description: Get NFS Share of `id`.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'NFS Share details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
      - sharing
      operationId: updateShareNFS
      description: Update NFS Share of `id`.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'NFS Share details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              # using CreateShareNFSParams since it's the same payload as UpdateShareNFSParams
              $ref: '#/components/schemas/CreateShareNFSParams'
  /sharing/smb:
    get:
      tags:
      - sharing
      operationId: listSharesSMB
      description: Get a list of SMB shares
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'List of SMB shares'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesSMBResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
    post:
      tags:
      - sharing
      operationId: createShareSMB
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'SMB Share details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters: []
      description: |-
        Create an SMB Share.

        `purpose` applies common configuration presets depending on intended purpose.

        `timemachine` when set, enables Time Machine backups for this share.

        `ro` when enabled, prohibits write access to the share.

        `guestok` when enabled, allows access to this share without a password.

        `hostsallow` is a list of hostnames / IP addresses which have access to this share.

        `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful
        of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny
        access to ALL hostnames except for the ones which have been listed in `hostsallow`.

        `acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.

        `streams` enables support for storing alternate datastreams as filesystem extended attributes.

        `fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create
        ZFS snapshots through RPC.

        `shadowcopy` enables support for the volume shadow copy service.

        `auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareSMBParams'
  '/sharing/smb/id/{id}':
    delete:
      tags:
      - sharing
      operationId: removeShareSMB
      security:
      - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      description: |-
        Delete SMB Share of `id`. This will forcibly disconnect SMB clients
        that are accessing the share.
    get:
      tags:
      - sharing
      operationId: getShareSMB
      description: Get SMB Share of `id`.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'SMB Share details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
      - sharing
      operationId: updateShareSMB
      description: Update SMB Share of `id`.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'SMB Share details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              # using CreateShareSMBParams because it is the same payload as Update
              $ref: '#/components/schemas/CreateShareSMBParams'
  /user:
    get:
      tags:
      - user
      operationId: listUsers
      description: Get a list of (local) users.
      # description: |-
      #   Query users with `query-filters` and `query-options`. As a performance optimization, only local users
      #   will be queried by default.

      #   Users from directory services such as NIS, LDAP, or Active Directory will be included in query results
      #   if the option `{'extra': {'search_dscache': True}}` is specified.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'List of local users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
    post:
      tags:
      - user
      operationId: createUser
      description: |-
        Create a new user.

        If `uid` is not provided it is automatically filled with the next one available.

        `group` is required if `group_create` is false.

        `password` is required if `password_disabled` is false.

        Available choices for `shell` can be retrieved with `user.shell_choices`.

        `attributes` is a general-purpose object for storing arbitrary user information.

        `smb` specifies whether the user should be allowed access to SMB shares. User
        willl also automatically be added to the `builtin_users` group.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'User ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserParams'
  '/user/id/{id}':
    delete:
      tags:
      - user
      operationId: deleteUser
      description: |-
        Delete user `id`.

        The `delete_group` option deletes the user primary group if it is not being used by
        any other user.
      security:
      - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserParams'
    get:
      tags:
      - user
      operationId: getUser
      description: Get user of `id`.
      # description: |-
      #   Query users with `query-filters` and `query-options`. As a performance optimization, only local users
      #   will be queried by default.

      #   Users from directory services such as NIS, LDAP, or Active Directory will be included in query results
      #   if the option `{'extra': {'search_dscache': True}}` is specified.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'User details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
      - user
      operationId: updateUser
      description: Update attributes of an existing user.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'User ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserParams'
  /user/shell_choices:
    post:
      tags:
      - user
      operationId: getUserShellChoices
      description: |-
        Return the available shell choices to be used in `user.create` and `user.update`.

        If `user_id` is provided, shell choices are filtered to ensure the user can access the shell choices provided.
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'Valid shell choices'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserShellChoices'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserShellChoicesParams'
  /vm:
    get:
      tags:
      - vm
      operationId: listVMS
      description: Get a list of VMs
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 'List of VMs'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMSResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
    post:
      tags:
      - vm
      operationId: createVM
      parameters: []
      security:
      - bearerAuth: []
      description: |-
        Create a Virtual Machine (VM).

        `devices` is a list of virtualized hardware to add to the newly created Virtual Machine.
        Failure to attach a device destroys the VM and any resources allocated by the VM devices.

        Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
        separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
        `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
        specifies number of threads per core.

        `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
        For headless installations like ubuntu server this is required for the guest to operate properly. However
        for cases where consumer would like to use GPU passthrough and does not want a display device added should set
        this to `false`.

        `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
        system in this case will choose a reasonable default based on host.

        `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
        By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
        configuration.

        `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
        shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
        `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.

        `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
        is useful to enable when doing GPU passthrough.

        SCALE Angelfish: Specifying `devices` is deprecated and will be removed in next major release.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMParams'
      responses:
        '200':
          description: 'VM details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /vm/id/{id}:
    get:
      tags:
      - vm
      operationId: getVM
      security:
      - bearerAuth: []
      description: Get VM details
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        in: query
        required: false
        schema:
          type: integer
      - name: count
        in: query
        required: false
        schema:
          type: boolean
      - name: sort
        in: query
        required: false
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: 'VM details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
      - vm
      operationId: deleteVM
      security:
      - bearerAuth: []
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/Unauthorized'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      description: Delete a VM.
    put:
      operationId: updateVM
      tags:
      - vm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      description: |-
        Update all information of a specific VM.

        `devices` is a list of virtualized hardware to attach to the virtual machine. If `devices` is not present,
        no change is made to devices. If either the device list order or data stored by the device changes when the
        attribute is passed, these actions are taken:

        1) If there is no device in the `devices` list which was previously attached to the VM, that device is
           removed from the virtual machine.
        2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to
           an existing device.
        3) Devices that do not have an `id` attribute are created and attached to `id` VM.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: List of VMs
        "401":
          description: No authorization for this endpoint
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: APIKey
  schemas:
    CreateCronjobParams:
      type: object
      required:
      - user
      - command
      properties:
        user:
          type: string
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        stdout:
          type: boolean
        stderr:
          type: boolean
        schedule:
          $ref: '#/components/schemas/CronJobSchedule'
    ListDatasetResponse:
      type: array
      items:
        $ref: '#/components/schemas/Dataset'
    UpdateVMParams:
      type: object
      properties:
        name:
          type: string
        cpu_mode:
          default: CUSTOM
          enum:
          - CUSTOM
          - HOST-MODEL
          - HOST-PASSTHROUGH
          type: string
        cpu_model:
          nullable: true
          type: string
        description:
          type: string
        vcpus:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        cores:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        threads:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        memory:
          format: int64
          type: integer
        bootloader:
          default: UEFI
          enum:
          - UEFI
          - UEFI_CSM
          type: string
        devices:
          type: array
          items:
            $ref: '#/components/schemas/VMDevice'
          description: |-
            `devices` is a list of virtualized hardware to add to the newly created Virtual Machine.
            Failure to attach a device destroys the VM and any resources allocated by the VM devices.
        autostart:
          default: true
          type: boolean
        hide_from_msr:
          default: false
          description: |-
            `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
            is useful to enable when doing GPU passthrough.
          type: boolean
        ensure_display_device:
          default: true
          description: |-
            `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
            For headless installations like ubuntu server this is required for the guest to operate properly. However
            for cases where consumer would like to use GPU passthrough and does not want a display device added should set
            this to `false`.
          type: boolean
        time:
          default: LOCAL
          enum:
          - LOCAL
          - UTC
          title: time
          type: string
        shutdown_timeout:
          default: 90
          description: |-
            `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
            shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
            `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.
          type: integer
        arch_type:
          description: |-
            `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
            system in this case will choose a reasonable default based on host.
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          type: string
        machine_type:
          description: |-
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          type: string
        uuid:
          nullable: true
          type: string
    CreateVMParams:
      type: object
      properties:
        command_line_args:
          title: command_line_args
          default: ""
          type: string
        cpu_mode:
          default: CUSTOM
          type: string
          enum:
          - CUSTOM
          - HOST-MODEL
          - HOST-PASSTHROUGH
        cpu_model:
          default:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
        vcpus:
          type: integer
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
        cores:
          type: integer
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
        threads:
          type: integer
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
        cpuset:
          default:
          type: string
          nullable: true
        nodeset:
          default:
          type: string
          nullable: true
        pin_vcpus:
          type: boolean
          default: false
        suspend_on_snapshot:
          type: boolean
          default: false
        memory:
          type: integer
          format: int64
        min_memory:
          type: integer
          format: int64
          default:
          nullable: true
        hyperv_enlightenments:
          type: boolean
          default: false
          description: |-
            `hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.
            These enlightenments improve performance and enable otherwise missing features.
        bootloader:
          default: UEFI
          type: string
          enum:
          - UEFI
          - UEFI_CSM
        autostart:
          type: boolean
          default: true
        hide_from_msr:
          type: boolean
          default: false
          description: |-
            `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
            is useful to enable when doing GPU passthrough.
        ensure_display_device:
          type: boolean
          default: true
          description: |-
            `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
            For headless installations like ubuntu server this is required for the guest to operate properly. However
            for cases where consumer would like to use GPU passthrough and does not want a display device added should set
            this to `false`.
        time:
          title: time
          default: LOCAL
          type: string
          enum:
          - LOCAL
          - UTC
        shutdown_timeout:
          type: integer
          default: 90
          description: |-
            `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
            shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
            `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.
        arch_type:
          default:
          type: string
          description: |-
            `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
            system in this case will choose a reasonable default based on host.
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
        machine_type:
          default:
          type: string
          description: |-
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
        uuid:
          default:
          type: string
          nullable: true
      additionalProperties: false
      default: {}
    CreateDatasetParams:
      type: object
      required:
      - name
      properties:
        atime:
          type: string
        aclmode:
          type: string
        name:
          type: string
        comments:
          type: string
        compression:
          type: string
        casesensitivity:
          type: string
        copies:
          type: integer
        deduplication:
          type: string
        encryption:
          type: boolean
        encryption_options:
          type: object
          properties:
            algorithm:
              type: string
            generate_key:
              type: boolean
            passphrase:
              type: string
            key:
              type: string
        exec:
          type: string
        force_size:
          type: boolean
        inherit_encryption:
          type: boolean
        quota:
          type: integer
          format: int64
        quota_critical:
          type: integer
          format: int64
        quota_warning:
          type: integer
          format: int64
        volsize:
          type: integer
          format: int64
        volblocksize:
          type: string
        readonly:
          type: string
        recordsize:
          type: string
        refquota:
          type: integer
          format: int64
        refquota_critical:
          type: integer
          format: int64
        refquota_warning:
          type: integer
          format: int64
        refreservation:
          type: integer
          format: int64
        reservation:
          type: integer
          format: int64
        share_type:
          type: string
        snapdir:
          type: string
        sync:
          type: string
        type:
          type: string
    UpdateDatasetParams:
      type: object
      properties:
        atime:
          type: string
        aclmode:
          type: string
        comments:
          type: string
        compression:
          type: string
        copies:
          type: integer
        deduplication:
          type: string
        exec:
          type: string
        force_size:
          type: boolean
        quota:
          type: integer
          format: int64
        readonly:
          type: string
        recordsize:
          type: string
        refquota:
          type: integer
          format: int64
        refreservation:
          type: integer
          format: int64
        volsize:
          type: integer
          format: int64
        snapdir:
          type: string
        sync:
          type: string
    CreateGroupParams:
      type: object
      required:
      - name
      properties:
        gid:
          type: integer
        name:
          type: string
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          type: array
          items:
            type: string
        allow_duplicate_gid:
          type: boolean
        users:
          type: array
          items:
            type: integer
    DeleteGroupParams:
      type: object
      properties:
        delete_users:
          type: boolean
    CreateShareNFSParams:
      type: object
      required:
      - paths
      properties:
        paths:
          type: array
          items:
            type: string
        comment:
          type: string
        networks:
          type: array
          items:
            type: string
        hosts:
          type: array
          items:
            type: string
        alldirs:
          type: boolean
        ro:
          type: boolean
        quiet:
          type: boolean
        maproot_user:
          type: string
        maproot_group:
          type: string
        mapall_user:
          type: string
        mapall_group:
          type: string
        security:
          type: array
          items:
            type: string
        enabled:
          type: boolean
    # UpdateShareNFSParams:
    #   type: object
    #   properties:
    #     paths:
    #       type: array
    #       items:
    #         type: string
    #     comment:
    #       type: string
    #     networks:
    #       type: array
    #       items:
    #         type: string
    #     hosts:
    #       type: array
    #       items:
    #         type: string
    #     alldirs:
    #       type: boolean
    #     ro:
    #       type: boolean
    #     quiet:
    #       type: boolean
    #     maproot_user:
    #       type: string
    #     maproot_group:
    #       type: string
    #     mapall_user:
    #       type: string
    #     mapall_group:
    #       type: string
    #     security:
    #       type: array
    #       items:
    #         type: string
    #     enabled:
    #       type: boolean
    CreateShareSMBParams:
      type: object
      required:
      - path
      properties:
        purpose:
          type: string
        path:
          type: string
        path_suffix:
          type: string
        home:
          type: boolean
        name:
          type: string
        comment:
          type: string
        ro:
          type: boolean
        browsable:
          type: boolean
        timemachine:
          type: boolean
        recyclebin:
          type: boolean
        guestok:
          type: boolean
        abe:
          type: boolean
        hostsallow:
          type: array
          items:
            type: string
        hostsdeny:
          type: array
          items:
            type: string
        aapl_name_mangling:
          type: boolean
        acl:
          type: boolean
        durablehandle:
          type: boolean
        shadowcopy:
          type: boolean
        streams:
          type: boolean
        fsrvp:
          type: boolean
        auxsmbconf:
          type: string
        enabled:
          type: boolean
    # UpdateShareSMBParams:
    #   type: object
    #   properties:
    #     purpose:
    #       type: string
    #     path:
    #       type: string
    #     path_suffix:
    #       type: string
    #     home:
    #       type: boolean
    #     name:
    #       type: string
    #     comment:
    #       type: string
    #     ro:
    #       type: boolean
    #     browsable:
    #       type: boolean
    #     timemachine:
    #       type: boolean
    #     recyclebin:
    #       type: boolean
    #     guestok:
    #       type: boolean
    #     abe:
    #       type: boolean
    #     hostsallow:
    #       type: array
    #       items:
    #         type: string
    #     hostsdeny:
    #       type: array
    #       items:
    #         type: string
    #     aapl_name_mangling:
    #       type: boolean
    #     acl:
    #       type: boolean
    #     durablehandle:
    #       type: boolean
    #     shadowcopy:
    #       type: boolean
    #     streams:
    #       type: boolean
    #     fsrvp:
    #       type: boolean
    #     auxsmbconf:
    #       type: string
    #     enabled:
    #       type: boolean
    CreateUserParams:
      type: object
      required:
      - username
      - full_name
      properties:
        uid:
          type: integer
        username:
          type: string
        group:
          type: integer
        group_create:
          type: boolean
        home:
          type: string
        home_mode:
          type: string
        shell:
          type: string
        full_name:
          type: string
        email:
          type: string
          nullable: true
        password:
          type: string
        password_disabled:
          type: boolean
        locked:
          type: boolean
        microsoft_account:
          type: boolean
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          type: array
          items:
            type: string
        sshpubkey:
          type: string
          nullable: true
        groups:
          type: array
          items:
            type: integer
        attributes:
          type: object
          properties: {}
          additionalProperties: true
    DeleteUserParams:
      type: object
      properties:
        delete_group:
          type: boolean
    UpdateUserParams:
      type: object
      properties:
        uid:
          type: integer
        username:
          type: string
        group:
          type: integer
        home:
          type: string
        home_mode:
          type: string
        shell:
          type: string
        full_name:
          type: string
        email:
          type: string
          nullable: true
        password:
          type: string
        password_disabled:
          type: boolean
        locked:
          type: boolean
        microsoft_account:
          type: boolean
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          type: array
          items:
            type: string
        sshpubkey:
          type: string
          nullable: true
        groups:
          type: array
          items:
            type: integer
        attributes:
          type: object
          properties: {}
          additionalProperties: true
    UserShellChoicesParams:
      type: integer
      title: user_id
      default:
      nullable: true
    CompositeValue:
      type: object
      required:
      - rawvalue
      properties:
        value:
          type: string
        rawvalue:
          type: string
#        Does not seem to work yet:
#        parsed:
#          anyOf:
#            - type: string
#            - type: number
        source:
          type: string
    CronJob:
      type: object
      properties:
        id:
          type: integer
        user:
          type: string
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        stdout:
          type: boolean
        stderr:
          type: boolean
        schedule:
          $ref: '#/components/schemas/CronJobSchedule'
    CronJobSchedule:
      type: object
      properties:
        minute:
          type: string
        hour:
          type: string
        dom:
          type: string
        month:
          type: string
        dow:
          type: string
    Dataset:
      type: object
      required:
      - id
      - name
      - pool
      - type
      properties:
        id:
          type: string
        name:
          type: string
        pool:
          type: string
        type:
          type: string
        mountpoint:
          type: string
        encrypted:
          type: boolean
        encryption_root:
          type: string
        key_loaded:
          type: boolean
        locked:
          type: boolean
        encryption_algorithm:
          $ref: '#/components/schemas/CompositeValue'
        aclmode:
          $ref: '#/components/schemas/CompositeValue'
        acltype:
          $ref: '#/components/schemas/CompositeValue'
        atime:
          $ref: '#/components/schemas/CompositeValue'
        available:
          $ref: '#/components/schemas/CompositeValue'
        casesensitivity:
          $ref: '#/components/schemas/CompositeValue'
        comments:
          $ref: '#/components/schemas/CompositeValue'
        compression:
          $ref: '#/components/schemas/CompositeValue'
        deduplication:
          $ref: '#/components/schemas/CompositeValue'
        exec:
          $ref: '#/components/schemas/CompositeValue'
        key_format:
          $ref: '#/components/schemas/CompositeValue'
        managedby:
          $ref: '#/components/schemas/CompositeValue'
        copies:
          $ref: '#/components/schemas/CompositeValue'
        quota:
          $ref: '#/components/schemas/CompositeValue'
        quota_critical:
          $ref: '#/components/schemas/CompositeValue'
        quota_warning:
          $ref: '#/components/schemas/CompositeValue'
        reservation:
          $ref: '#/components/schemas/CompositeValue'
        refreservation:
          $ref: '#/components/schemas/CompositeValue'
        refquota:
          $ref: '#/components/schemas/CompositeValue'
        refquota_critical:
          $ref: '#/components/schemas/CompositeValue'
        refquota_warning:
          $ref: '#/components/schemas/CompositeValue'
        readonly:
          $ref: '#/components/schemas/CompositeValue'
        recordsize:
          $ref: '#/components/schemas/CompositeValue'
        sync:
          $ref: '#/components/schemas/CompositeValue'
        snapdir:
          $ref: '#/components/schemas/CompositeValue'
        used:
          $ref: '#/components/schemas/CompositeValue'
        pbkdf2iters:
          $ref: '#/components/schemas/CompositeValue'
        origin:
          $ref: '#/components/schemas/CompositeValue'
        xattr:
          $ref: '#/components/schemas/CompositeValue'
        volsize:
          $ref: '#/components/schemas/CompositeValue'
        volblocksize:
          $ref: '#/components/schemas/CompositeValue'
    GroupsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    GroupResponse:
      # POST/PUT only returns group ID
      type: integer
      title: group_id
    Group:
      type: object
      required:
      - id
      - group
      properties:
        id:
          type: integer
        gid:
          type: integer
        group:
          type: string
        builtin:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          type: array
          items:
            type: string
        smb:
          type: boolean
        users:
          type: array
          items:
            type: integer
        local:
          type: boolean
        id_type_both:
          type: boolean
    NetworkConfig:
      type: object
      properties:
        id:
          type: integer
        hostname:
          type: string
        domain:
          type: string
        ipv4gateway:
          type: string
        ipv6gateway:
          type: string
        nameserver1:
          type: string
        nameserver2:
          type: string
        nameserver3:
          type: string
        httpproxy:
          type: string
        netwait_enabled:
          type: boolean
        netwait_ip:
          type: array
          items:
            type: string
        hosts:
          type: string
        domains:
          type: array
          items:
            type: string
        service_announcement:
          type: object
          properties:
            netbios:
              type: boolean
            mdns:
              type: boolean
            wsd:
              type: boolean
        hostname_local:
          type: string
    NetworkSummary:
      type: object
      properties:
        ips:
          type: object
          additionalProperties:
            type: object
            properties:
              IPV4:
                type: array
                items:
                  type: string
              IPV6:
                type: array
                items:
                  type: string
        default_routes:
          type: array
          items:
            type: string
        nameservers:
          type: array
          items:
            type: string
    PoolsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Pool'
    Pool:
      type: object
      required:
      - id
      - name
      - path
      properties:
        id:
          type: integer
        name:
          type: string
        guid:
          type: string
        path:
          type: string
        status:
          type: string
        healthy:
          type: boolean
        is_decrypted:
          type: boolean
        encryptkey_path:
          type: string
    Service:
      type: object
      required:
      - id
      - service
      properties:
        id:
          type: integer
        service:
          type: string
        enable:
          type: boolean
        state:
          type: string
        pids:
          type: array
          items:
            type: integer
    ShareNFS:
      type: object
      required:
      - id
      - paths
      properties:
        id:
          type: integer
        path:
          title: path
          type: string
          description: '`path` local path to be exported.'
        aliases:
          title: aliases
          default: []
          type: array
          items:
            title: path
            type: string
          description: '`aliases` IGNORED, for now.'
        comment:
          type: string
          default: ""
        networks:
          title: networks
          default: []
          type: array
          items:
            title: network
            type: string
          description: |-
            `networks` is a list of authorized networks that are allowed to access the share having format
            "network/mask" CIDR notation. If empty, all networks are allowed.
        hosts:
          type: array
          items:
            type: string
        alldirs:
          type: boolean
        ro:
          type: boolean
          default: false
        quiet:
          type: boolean
          default: false
        maproot_user:
          type: string
          default:
          nullable: true
        maproot_group:
          type: string
          default:
          nullable: true
        mapall_user:
          type: string
          default:
          nullable: true
        mapall_group:
          type: string
          default:
          nullable: true
        security:
          type: array
          items:
            type: string
            enum:
            - SYS
            - KRB5
            - KRB5I
            - KRB5P
        enabled:
          type: boolean
          default: true
    ShareSMB:
      type: object
      required:
      - id
      - path
      properties:
        id:
          type: integer
        path:
          type: string
        path_suffix:
          type: string
        purpose:
          type: string
        home:
          type: boolean
        timemachine:
          type: boolean
        name:
          type: string
        comment:
          type: string
        ro:
          type: boolean
        browsable:
          type: boolean
        recyclebin:
          type: boolean
        shadowcopy:
          type: boolean
        guestok:
          type: boolean
        abe:
          type: boolean
        hostsallow:
          type: array
          items:
            type: string
        hostsdeny:
          type: array
          items:
            type: string
        aapl_name_mangling:
          type: boolean
        acl:
          type: boolean
        durablehandle:
          type: boolean
        streams:
          type: boolean
        fsrvp:
          type: boolean
        auxsmbconf:
          type: string
        enabled:
          type: boolean
        locked:
          type: boolean
        vuid:
          type: string
    SharesNFSResponse:
      type: array
      items:
        $ref: '#/components/schemas/ShareNFS'
    SharesSMBResponse:
      type: array
      items:
        $ref: '#/components/schemas/ShareSMB'
    User:
      type: object
      required:
      - id
      - username
      - full_name
      properties:
        id:
          type: integer
        uid:
          type: integer
        username:
          type: string
        unixhash:
          type: string
        smbhash:
          type: string
        home:
          type: string
        shell:
          type: string
        full_name:
          type: string
        builtin:
          type: bool
        smb:
          type: bool
        password_disabled:
          type: bool
        locked:
          type: bool
        sudo:
          type: bool
        sudo_nopasswd:
          type: bool
        sudo_commands:
          type: array
          items:
            type: string
        microsoft_account:
          type: bool
        attributes:
          type: object
          properties: {}
          additionalProperties: true
        email:
          type: string
          nullable: true
        group:
          type: object
          properties:
            id:
              type: integer
            bsdgrp_gid:
              type: integer
            bsdgrp_group:
              type: string
            bsdgrp_builtin:
              type: bool
            bsdgrp_sudo:
              type: bool
            bsdgrp_sudo_nopasswd:
              type: bool
            bsdgrp_sudo_commands:
              type: array
              items:
                type: string
            bsdgrp_smb:
              type: bool
        groups:
          type: array
          items:
            type: integer
        sshpubkey:
          type: string
          nullable: true
        local:
          type: bool
        id_type_both:
          type: bool
    VMDevice:
      type: object
      required:
      - dtype
      properties:
        id:
          type: integer
        dtype:
          type: string
          enum:
          - NIC
          - DISK
          - CDROM
          - PCI
          - DISPLAY
          - RAW
        attributes:
          type: object
          properties: {}
          additionalProperties: true
        order:
          type: integer
        vm:
          type: integer
    UsersResponse:
      type: array
      items:
        $ref: '#/components/schemas/User'
    UserResponse:
      # POST/PUT only returns user ID
      type: integer
      title: user_id
    UserShellChoices:
      type: object
      additionalProperties:
        type: string
    VM:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        vcpus:
          type: integer
        memory:
          type: integer
          format: int64
        min_memory:
          type: integer
          format: int64
        autostart:
          type: boolean
        time:
          type: string
        bootloader:
          type: string
        cores:
          type: integer
        threads:
          type: integer
        hyperv_enlightenments:
          type: boolean
        shutdown_timeout:
          type: integer
        cpu_mode:
          type: string
        cpu_model:
          type: string
        cpuset:
          type: string
        nodeset:
          type: string
        pin_vcpus:
          type: boolean
        hide_from_msr:
          type: boolean
        suspend_on_snapshot:
          type: boolean
        ensure_display_device:
          type: boolean
        arch_type:
          type: string
        machine_type:
          type: string
        uuid:
          type: string
        command_line_args:
          type: string
        devices:
          type: array
          items:
            $ref: '#/components/schemas/VMDevice'
        status:
          type: object
          properties:
            state:
              type: string
            pid:
              type: integer
            domain_state:
              type: string
    VMSResponse:
      type: array
      items:
        $ref: '#/components/schemas/VM'
  responses:
    NotFound:
      description: Endpoint not found
    Unauthorized:
      description: No authorization for this endpoint
    Success:
      description: Operation succeeded
