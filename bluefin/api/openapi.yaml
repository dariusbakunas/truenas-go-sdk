openapi: 3.0.0
info:
  description: Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator
    https://github.com/openapitools/openapi-generator)
  title: TrueNAS RESTful API
  version: v2.0
servers:
- url: /
paths:
  /pool:
    get:
      operationId: listPools
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsResponse'
          description: A list of pools
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - pool
  /pool/dataset:
    get:
      operationId: listDatasets
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetResponse'
          description: A list of datasets
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    post:
      description: |-
        Creates a dataset/zvol.

        `volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.
        `sparse` and `volblocksize` are only used for type=VOLUME.

        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.
        There are 2 cases where ZFS encryption is not allowed for a dataset:
        1) Pool in question is GELI encrypted.
        2) If the parent dataset is encrypted with a passphrase and `name` is being created
          with a key for encrypting the dataset.

        `encryption_options` specifies configuration for encryption of dataset for `name` pool.
        `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase
        as a key.
        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
        `encryption_options.generate_key` when enabled automatically generates the key to be used
        for dataset encryption.

        It should be noted that keys are stored by the system for automatic locking/unlocking
        on import/export of encrypted datasets. If that is not desired, dataset should be created
        with a passphrase as a key.
      operationId: createDataset
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Dataset details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
  /pool/dataset/id/{id}:
    delete:
      description: |-
        Delete dataset/zvol

        `recursive` will also delete/destroy all children datasets.
        `force` will force delete busy datasets.
      operationId: deleteDataset
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    get:
      description: |-
        Query Pool Datasets with `query-filters` and `query-options`.

        We provide two ways to retrieve datasets. The first is a flat structure (default), where
        all datasets in the system are returned as separate objects which contain all data
        there is for their children. This retrieval type is slightly slower because of duplicates in each object.
        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the
        children in the `children` key. This retrieval type is slightly faster.
        These options are controlled by the `query-options.extra.flat` attribute (default true).
      operationId: getDataset
      parameters:
      - description: ID of the dataset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Dataset details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
    put:
      description: Update dataset
      operationId: updateDataset
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Dataset details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - dataset
  /cronjob/id/{id}:
    delete:
      operationId: deleteCronJob
      parameters:
      - description: ID of the cronjob
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
    get:
      operationId: getCronJob
      parameters:
      - description: ID of the cronjob
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
          description: CronJob details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
    put:
      description: Update cronjob
      operationId: updateCronJob
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronjobParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
          description: CronJob details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
  /cronjob:
    post:
      description: |-
        Create a new cron job.

        `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress
        standard error / standard output respectively.
      operationId: createCronJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCronjobParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronJob'
          description: CronJob details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - cronjob
  /group:
    get:
      description: Get a list of (local) groups
      operationId: listGroups
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          $ref: '#/components/responses/GroupsResponse'
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - group
    post:
      description: |-
        Create a new group.

        If `gid` is not provided it is automatically filled with the next one available.

        `allow_duplicate_gid` allows distinct group names to share the same gid.

        `users` is a list of user ids (`id` attribute from `user.query`).

        `smb` specifies whether the group should be mapped into an NT group.
      operationId: createGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Group details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - group
  /group/id/{id}:
    delete:
      description: |-
        Delete group `id`.

        The `delete_users` option deletes all users that have this group as their primary group.
      operationId: deleteGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupParams'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - group
    get:
      description: Get group of `id`.
      operationId: getGroup
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Group details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - group
    put:
      description: Update attributes of an existing group.
      operationId: updateGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Group details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - group
  /network/configuration:
    get:
      operationId: getNetworkConfiguration
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfig'
          description: General network configuration
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - network
  /network/general/summary:
    get:
      operationId: getNetworkSummary
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSummary'
          description: General network summary
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - network
  /service/id/{id}:
    get:
      operationId: getService
      parameters:
      - description: ID of the cronjob
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Service details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - service
  /sharing/nfs:
    get:
      description: Get a list of NFS shares
      operationId: listSharesNFS
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesNFSResponse'
          description: List of NFS shares
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    post:
      description: |-
        Create a new NFS Share.

        `paths` is a list of valid paths which are configured to be shared on this share.

        `networks` is a list of authorized networks that are allowed to access the share having format
        "network/mask" CIDR notation. If empty, all networks are allowed.

        `hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are
        allowed.

        `alldirs` is a boolean value which when set indicates that the client can mount any subdirectories of the
        selected pool or dataset.
      operationId: createShareNFS
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareNFSParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
          description: NFS share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /sharing/nfs/id/{id}:
    delete:
      description: Delete NFS Share of `id`.
      operationId: removeShareNFS
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    get:
      description: Get NFS Share of `id`.
      operationId: getShareNFS
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
          description: NFS Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    put:
      description: Update NFS Share of `id`.
      operationId: updateShareNFS
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareNFSParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareNFS'
          description: NFS Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /sharing/smb:
    get:
      description: Get a list of SMB shares
      operationId: listSharesSMB
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesSMBResponse'
          description: List of SMB shares
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    post:
      description: |-
        Create an SMB Share.

        `purpose` applies common configuration presets depending on intended purpose.

        `timemachine` when set, enables Time Machine backups for this share.

        `ro` when enabled, prohibits write access to the share.

        `guestok` when enabled, allows access to this share without a password.

        `hostsallow` is a list of hostnames / IP addresses which have access to this share.

        `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful
        of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny
        access to ALL hostnames except for the ones which have been listed in `hostsallow`.

        `acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.

        `streams` enables support for storing alternate datastreams as filesystem extended attributes.

        `fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create
        ZFS snapshots through RPC.

        `shadowcopy` enables support for the volume shadow copy service.

        `auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.
      operationId: createShareSMB
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareSMBParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
          description: SMB Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /sharing/smb/id/{id}:
    delete:
      description: |-
        Delete SMB Share of `id`. This will forcibly disconnect SMB clients
        that are accessing the share.
      operationId: removeShareSMB
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    get:
      description: Get SMB Share of `id`.
      operationId: getShareSMB
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
          description: SMB Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
    put:
      description: Update SMB Share of `id`.
      operationId: updateShareSMB
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShareSMBParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSMB'
          description: SMB Share details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - sharing
  /user:
    get:
      description: Get a list of (local) users.
      operationId: listUsers
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: List of local users
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - user
    post:
      description: |-
        Create a new user.

        If `uid` is not provided it is automatically filled with the next one available.

        `group` is required if `group_create` is false.

        `password` is required if `password_disabled` is false.

        Available choices for `shell` can be retrieved with `user.shell_choices`.

        `attributes` is a general-purpose object for storing arbitrary user information.

        `smb` specifies whether the user should be allowed access to SMB shares. User
        willl also automatically be added to the `builtin_users` group.
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User ID
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - user
  /user/id/{id}:
    delete:
      description: |-
        Delete user `id`.

        The `delete_group` option deletes the user primary group if it is not being used by
        any other user.
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserParams'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - user
    get:
      description: Get user of `id`.
      operationId: getUser
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - user
    put:
      description: Update attributes of an existing user.
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User ID
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - user
  /user/shell_choices:
    post:
      description: |-
        Return the available shell choices to be used in `user.create` and `user.update`.

        If `user_id` is provided, shell choices are filtered to ensure the user can access the shell choices provided.
      operationId: getUserShellChoices
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserShellChoicesParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserShellChoices'
          description: Valid shell choices
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - user
  /vm:
    get:
      description: Get a list of VMs
      operationId: listVMS
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMSResponse'
          description: List of VMs
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - vm
    post:
      description: |-
        Create a Virtual Machine (VM).

        `devices` is a list of virtualized hardware to add to the newly created Virtual Machine.
        Failure to attach a device destroys the VM and any resources allocated by the VM devices.

        Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
        separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
        `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
        specifies number of threads per core.

        `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
        For headless installations like ubuntu server this is required for the guest to operate properly. However
        for cases where consumer would like to use GPU passthrough and does not want a display device added should set
        this to `false`.

        `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
        system in this case will choose a reasonable default based on host.

        `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
        By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
        configuration.

        `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
        shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
        `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.

        `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
        is useful to enable when doing GPU passthrough.

        SCALE Angelfish: Specifying `devices` is deprecated and will be removed in next major release.
      operationId: createVM
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: VM details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - vm
  /vm/id/{id}:
    delete:
      description: Delete a VM.
      operationId: deleteVM
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - vm
    get:
      description: Get VM details
      operationId: getVM
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: VM details
        "401":
          description: No authorization for this endpoint
      security:
      - bearerAuth: []
      tags:
      - vm
    put:
      description: |-
        Update all information of a specific VM.

        `devices` is a list of virtualized hardware to attach to the virtual machine. If `devices` is not present,
        no change is made to devices. If either the device list order or data stored by the device changes when the
        attribute is passed, these actions are taken:

        1) If there is no device in the `devices` list which was previously attached to the VM, that device is
           removed from the virtual machine.
        2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to
           an existing device.
        3) Devices that do not have an `id` attribute are created and attached to `id` VM.
      operationId: updateVM
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: List of VMs
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
components:
  responses:
    NotFound:
      description: Endpoint not found
    Unauthorized:
      description: No authorization for this endpoint
    Success:
      description: Operation succeeded
  schemas:
    CreateCronjobParams:
      example:
        schedule:
          dom: dom
          hour: hour
          month: month
          dow: dow
          minute: minute
        stdout: true
        description: description
        stderr: true
        user: user
        command: command
        enabled: true
      properties:
        user:
          type: string
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        stdout:
          type: boolean
        stderr:
          type: boolean
        schedule:
          $ref: '#/components/schemas/CronJobSchedule'
      required:
      - command
      - user
      type: object
    ListDatasetResponse:
      items:
        $ref: '#/components/schemas/Dataset'
      type: array
    UpdateVMParams:
      example:
        machine_type: machine_type
        memory: 5
        devices:
        - vm: 2
          dtype: NIC
          attributes:
            key: ""
          id: 9
          order: 3
        - vm: 2
          dtype: NIC
          attributes:
            key: ""
          id: 9
          order: 3
        arch_type: arch_type
        shutdown_timeout: 5
        description: description
        threads: 1
        vcpus: 0
        autostart: true
        uuid: uuid
        ensure_display_device: true
        cores: 6
        hide_from_msr: false
        cpu_model: cpu_model
        bootloader: UEFI
        name: name
        cpu_mode: CUSTOM
        time: LOCAL
      properties:
        name:
          type: string
        cpu_mode:
          default: CUSTOM
          enum:
          - CUSTOM
          - HOST-MODEL
          - HOST-PASSTHROUGH
          type: string
        cpu_model:
          nullable: true
          type: string
        description:
          type: string
        vcpus:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        cores:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        threads:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        memory:
          format: int64
          type: integer
        bootloader:
          default: UEFI
          enum:
          - UEFI
          - UEFI_CSM
          type: string
        devices:
          description: |-
            `devices` is a list of virtualized hardware to add to the newly created Virtual Machine.
            Failure to attach a device destroys the VM and any resources allocated by the VM devices.
          items:
            $ref: '#/components/schemas/VMDevice'
          type: array
        autostart:
          default: true
          type: boolean
        hide_from_msr:
          default: false
          description: |-
            `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
            is useful to enable when doing GPU passthrough.
          type: boolean
        ensure_display_device:
          default: true
          description: |-
            `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
            For headless installations like ubuntu server this is required for the guest to operate properly. However
            for cases where consumer would like to use GPU passthrough and does not want a display device added should set
            this to `false`.
          type: boolean
        time:
          default: LOCAL
          enum:
          - LOCAL
          - UTC
          title: time
          type: string
        shutdown_timeout:
          default: 90
          description: |-
            `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
            shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
            `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.
          type: integer
        arch_type:
          description: |-
            `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
            system in this case will choose a reasonable default based on host.
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          type: string
        machine_type:
          description: |-
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          type: string
        uuid:
          nullable: true
          type: string
      type: object
    CreateVMParams:
      additionalProperties: false
      default: {}
      example:
        machine_type: machine_type
        memory: 5
        min_memory: 5
        hyperv_enlightenments: false
        arch_type: arch_type
        shutdown_timeout: 2
        suspend_on_snapshot: false
        nodeset: nodeset
        description: description
        threads: 1
        cpuset: cpuset
        vcpus: 0
        autostart: true
        uuid: uuid
        command_line_args: command_line_args
        ensure_display_device: true
        cores: 6
        pin_vcpus: false
        hide_from_msr: false
        cpu_model: cpu_model
        bootloader: UEFI
        name: name
        cpu_mode: CUSTOM
        time: LOCAL
      properties:
        command_line_args:
          default: ""
          title: command_line_args
          type: string
        cpu_mode:
          default: CUSTOM
          enum:
          - CUSTOM
          - HOST-MODEL
          - HOST-PASSTHROUGH
          type: string
        cpu_model:
          nullable: true
          type: string
        name:
          type: string
        description:
          type: string
        vcpus:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        cores:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        threads:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          type: integer
        cpuset:
          nullable: true
          type: string
        nodeset:
          nullable: true
          type: string
        pin_vcpus:
          default: false
          type: boolean
        suspend_on_snapshot:
          default: false
          type: boolean
        memory:
          format: int64
          type: integer
        min_memory:
          format: int64
          nullable: true
          type: integer
        hyperv_enlightenments:
          default: false
          description: |-
            `hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.
            These enlightenments improve performance and enable otherwise missing features.
          type: boolean
        bootloader:
          default: UEFI
          enum:
          - UEFI
          - UEFI_CSM
          type: string
        autostart:
          default: true
          type: boolean
        hide_from_msr:
          default: false
          description: |-
            `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
            is useful to enable when doing GPU passthrough.
          type: boolean
        ensure_display_device:
          default: true
          description: |-
            `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
            For headless installations like ubuntu server this is required for the guest to operate properly. However
            for cases where consumer would like to use GPU passthrough and does not want a display device added should set
            this to `false`.
          type: boolean
        time:
          default: LOCAL
          enum:
          - LOCAL
          - UTC
          title: time
          type: string
        shutdown_timeout:
          default: 90
          description: |-
            `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
            shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
            `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.
          type: integer
        arch_type:
          description: |-
            `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
            system in this case will choose a reasonable default based on host.
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          type: string
        machine_type:
          description: |-
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          type: string
        uuid:
          nullable: true
          type: string
      type: object
    CreateDatasetParams:
      example:
        quota_critical: 1
        recordsize: recordsize
        deduplication: deduplication
        refreservation: 3
        type: type
        volblocksize: volblocksize
        encryption_options:
          generate_key: true
          passphrase: passphrase
          key: key
          algorithm: algorithm
        copies: 0
        encryption: true
        readonly: readonly
        casesensitivity: casesensitivity
        quota: 6
        reservation: 2
        inherit_encryption: true
        force_size: true
        refquota: 2
        atime: atime
        comments: comments
        volsize: 5
        sync: sync
        snapdir: snapdir
        quota_warning: 5
        share_type: share_type
        name: name
        refquota_critical: 7
        aclmode: aclmode
        compression: compression
        refquota_warning: 9
        exec: exec
      properties:
        atime:
          type: string
        aclmode:
          type: string
        name:
          type: string
        comments:
          type: string
        compression:
          type: string
        casesensitivity:
          type: string
        copies:
          type: integer
        deduplication:
          type: string
        encryption:
          type: boolean
        encryption_options:
          $ref: '#/components/schemas/CreateDatasetParams_encryption_options'
        exec:
          type: string
        force_size:
          type: boolean
        inherit_encryption:
          type: boolean
        quota:
          format: int64
          type: integer
        quota_critical:
          format: int64
          type: integer
        quota_warning:
          format: int64
          type: integer
        volsize:
          format: int64
          type: integer
        volblocksize:
          type: string
        readonly:
          type: string
        recordsize:
          type: string
        refquota:
          format: int64
          type: integer
        refquota_critical:
          format: int64
          type: integer
        refquota_warning:
          format: int64
          type: integer
        refreservation:
          format: int64
          type: integer
        reservation:
          format: int64
          type: integer
        share_type:
          type: string
        snapdir:
          type: string
        sync:
          type: string
        type:
          type: string
      required:
      - name
      type: object
    UpdateDatasetParams:
      example:
        atime: atime
        comments: comments
        volsize: 5
        recordsize: recordsize
        deduplication: deduplication
        refreservation: 5
        sync: sync
        snapdir: snapdir
        copies: 0
        readonly: readonly
        quota: 6
        aclmode: aclmode
        compression: compression
        force_size: true
        refquota: 1
        exec: exec
      properties:
        atime:
          type: string
        aclmode:
          type: string
        comments:
          type: string
        compression:
          type: string
        copies:
          type: integer
        deduplication:
          type: string
        exec:
          type: string
        force_size:
          type: boolean
        quota:
          format: int64
          type: integer
        readonly:
          type: string
        recordsize:
          type: string
        refquota:
          format: int64
          type: integer
        refreservation:
          format: int64
          type: integer
        volsize:
          format: int64
          type: integer
        snapdir:
          type: string
        sync:
          type: string
      type: object
    CreateGroupParams:
      example:
        sudo_nopasswd: true
        allow_duplicate_gid: true
        gid: 0
        name: name
        smb: true
        sudo: true
        users:
        - 6
        - 6
        sudo_commands:
        - sudo_commands
        - sudo_commands
      properties:
        gid:
          type: integer
        name:
          type: string
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        allow_duplicate_gid:
          type: boolean
        users:
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    DeleteGroupParams:
      example:
        delete_users: true
      properties:
        delete_users:
          type: boolean
      type: object
    CreateShareNFSParams:
      example:
        maproot_group: maproot_group
        hosts:
        - hosts
        - hosts
        networks:
        - networks
        - networks
        maproot_user: maproot_user
        enabled: true
        alldirs: true
        mapall_user: mapall_user
        mapall_group: mapall_group
        security:
        - security
        - security
        paths:
        - paths
        - paths
        comment: comment
        quiet: true
        ro: true
      properties:
        paths:
          items:
            type: string
          type: array
        comment:
          type: string
        networks:
          items:
            type: string
          type: array
        hosts:
          items:
            type: string
          type: array
        alldirs:
          type: boolean
        ro:
          type: boolean
        quiet:
          type: boolean
        maproot_user:
          type: string
        maproot_group:
          type: string
        mapall_user:
          type: string
        mapall_group:
          type: string
        security:
          items:
            type: string
          type: array
        enabled:
          type: boolean
      required:
      - paths
      type: object
    CreateShareSMBParams:
      example:
        auxsmbconf: auxsmbconf
        shadowcopy: true
        purpose: purpose
        abe: true
        hostsdeny:
        - hostsdeny
        - hostsdeny
        path_suffix: path_suffix
        streams: true
        browsable: true
        aapl_name_mangling: true
        acl: true
        fsrvp: true
        enabled: true
        home: true
        durablehandle: true
        path: path
        timemachine: true
        name: name
        comment: comment
        guestok: true
        ro: true
        hostsallow:
        - hostsallow
        - hostsallow
        recyclebin: true
      properties:
        purpose:
          type: string
        path:
          type: string
        path_suffix:
          type: string
        home:
          type: boolean
        name:
          type: string
        comment:
          type: string
        ro:
          type: boolean
        browsable:
          type: boolean
        timemachine:
          type: boolean
        recyclebin:
          type: boolean
        guestok:
          type: boolean
        abe:
          type: boolean
        hostsallow:
          items:
            type: string
          type: array
        hostsdeny:
          items:
            type: string
          type: array
        aapl_name_mangling:
          type: boolean
        acl:
          type: boolean
        durablehandle:
          type: boolean
        shadowcopy:
          type: boolean
        streams:
          type: boolean
        fsrvp:
          type: boolean
        auxsmbconf:
          type: string
        enabled:
          type: boolean
      required:
      - path
      type: object
    CreateUserParams:
      example:
        sshpubkey: sshpubkey
        microsoft_account: true
        smb: true
        groups:
        - 1
        - 1
        password_disabled: true
        home: home
        sudo_commands:
        - sudo_commands
        - sudo_commands
        uid: 0
        sudo_nopasswd: true
        password: password
        full_name: full_name
        group_create: true
        shell: shell
        attributes:
          key: ""
        sudo: true
        locked: true
        home_mode: home_mode
        email: email
        username: username
        group: 6
      properties:
        uid:
          type: integer
        username:
          type: string
        group:
          type: integer
        group_create:
          type: boolean
        home:
          type: string
        home_mode:
          type: string
        shell:
          type: string
        full_name:
          type: string
        email:
          nullable: true
          type: string
        password:
          type: string
        password_disabled:
          type: boolean
        locked:
          type: boolean
        microsoft_account:
          type: boolean
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        sshpubkey:
          nullable: true
          type: string
        groups:
          items:
            type: integer
          type: array
        attributes:
          additionalProperties: true
          properties: {}
          type: object
      required:
      - full_name
      - username
      type: object
    DeleteUserParams:
      example:
        delete_group: true
      properties:
        delete_group:
          type: boolean
      type: object
    UpdateUserParams:
      example:
        sshpubkey: sshpubkey
        microsoft_account: true
        smb: true
        groups:
        - 1
        - 1
        password_disabled: true
        home: home
        sudo_commands:
        - sudo_commands
        - sudo_commands
        uid: 0
        sudo_nopasswd: true
        password: password
        full_name: full_name
        shell: shell
        attributes:
          key: ""
        sudo: true
        locked: true
        home_mode: home_mode
        email: email
        username: username
        group: 6
      properties:
        uid:
          type: integer
        username:
          type: string
        group:
          type: integer
        home:
          type: string
        home_mode:
          type: string
        shell:
          type: string
        full_name:
          type: string
        email:
          nullable: true
          type: string
        password:
          type: string
        password_disabled:
          type: boolean
        locked:
          type: boolean
        microsoft_account:
          type: boolean
        smb:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        sshpubkey:
          nullable: true
          type: string
        groups:
          items:
            type: integer
          type: array
        attributes:
          additionalProperties: true
          properties: {}
          type: object
      type: object
    UserShellChoicesParams:
      nullable: true
      title: user_id
      type: integer
    CompositeValue:
      example:
        rawvalue: rawvalue
        source: source
        value: value
      properties:
        value:
          type: string
        rawvalue:
          type: string
        source:
          type: string
      required:
      - rawvalue
      type: object
    CronJob:
      example:
        schedule:
          dom: dom
          hour: hour
          month: month
          dow: dow
          minute: minute
        stdout: true
        description: description
        id: 0
        stderr: true
        user: user
        command: command
        enabled: true
      properties:
        id:
          type: integer
        user:
          type: string
        command:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        stdout:
          type: boolean
        stderr:
          type: boolean
        schedule:
          $ref: '#/components/schemas/CronJobSchedule'
      type: object
    CronJobSchedule:
      example:
        dom: dom
        hour: hour
        month: month
        dow: dow
        minute: minute
      properties:
        minute:
          type: string
        hour:
          type: string
        dom:
          type: string
        month:
          type: string
        dow:
          type: string
      type: object
    Dataset:
      example:
        key_loaded: true
        quota_critical:
          rawvalue: rawvalue
          source: source
          value: value
        origin:
          rawvalue: rawvalue
          source: source
          value: value
        available:
          rawvalue: rawvalue
          source: source
          value: value
        recordsize:
          rawvalue: rawvalue
          source: source
          value: value
        deduplication:
          rawvalue: rawvalue
          source: source
          value: value
        refreservation:
          rawvalue: rawvalue
          source: source
          value: value
        used:
          rawvalue: rawvalue
          source: source
          value: value
        type: type
        volblocksize:
          rawvalue: rawvalue
          source: source
          value: value
        mountpoint: mountpoint
        acltype:
          rawvalue: rawvalue
          source: source
          value: value
        copies:
          rawvalue: rawvalue
          source: source
          value: value
        readonly:
          rawvalue: rawvalue
          source: source
          value: value
        casesensitivity:
          rawvalue: rawvalue
          source: source
          value: value
        quota:
          rawvalue: rawvalue
          source: source
          value: value
        reservation:
          rawvalue: rawvalue
          source: source
          value: value
        id: id
        locked: true
        refquota:
          rawvalue: rawvalue
          source: source
          value: value
        xattr:
          rawvalue: rawvalue
          source: source
          value: value
        atime:
          rawvalue: rawvalue
          source: source
          value: value
        comments:
          rawvalue: rawvalue
          source: source
          value: value
        pbkdf2iters:
          rawvalue: rawvalue
          source: source
          value: value
        volsize:
          rawvalue: rawvalue
          source: source
          value: value
        key_format:
          rawvalue: rawvalue
          source: source
          value: value
        pool: pool
        encryption_root: encryption_root
        sync:
          rawvalue: rawvalue
          source: source
          value: value
        snapdir:
          rawvalue: rawvalue
          source: source
          value: value
        quota_warning:
          rawvalue: rawvalue
          source: source
          value: value
        encrypted: true
        managedby:
          rawvalue: rawvalue
          source: source
          value: value
        name: name
        refquota_critical:
          rawvalue: rawvalue
          source: source
          value: value
        encryption_algorithm:
          rawvalue: rawvalue
          source: source
          value: value
        aclmode:
          rawvalue: rawvalue
          source: source
          value: value
        compression:
          rawvalue: rawvalue
          source: source
          value: value
        refquota_warning:
          rawvalue: rawvalue
          source: source
          value: value
        exec:
          rawvalue: rawvalue
          source: source
          value: value
      properties:
        id:
          type: string
        name:
          type: string
        pool:
          type: string
        type:
          type: string
        mountpoint:
          type: string
        encrypted:
          type: boolean
        encryption_root:
          type: string
        key_loaded:
          type: boolean
        locked:
          type: boolean
        encryption_algorithm:
          $ref: '#/components/schemas/CompositeValue'
        aclmode:
          $ref: '#/components/schemas/CompositeValue'
        acltype:
          $ref: '#/components/schemas/CompositeValue'
        atime:
          $ref: '#/components/schemas/CompositeValue'
        available:
          $ref: '#/components/schemas/CompositeValue'
        casesensitivity:
          $ref: '#/components/schemas/CompositeValue'
        comments:
          $ref: '#/components/schemas/CompositeValue'
        compression:
          $ref: '#/components/schemas/CompositeValue'
        deduplication:
          $ref: '#/components/schemas/CompositeValue'
        exec:
          $ref: '#/components/schemas/CompositeValue'
        key_format:
          $ref: '#/components/schemas/CompositeValue'
        managedby:
          $ref: '#/components/schemas/CompositeValue'
        copies:
          $ref: '#/components/schemas/CompositeValue'
        quota:
          $ref: '#/components/schemas/CompositeValue'
        quota_critical:
          $ref: '#/components/schemas/CompositeValue'
        quota_warning:
          $ref: '#/components/schemas/CompositeValue'
        reservation:
          $ref: '#/components/schemas/CompositeValue'
        refreservation:
          $ref: '#/components/schemas/CompositeValue'
        refquota:
          $ref: '#/components/schemas/CompositeValue'
        refquota_critical:
          $ref: '#/components/schemas/CompositeValue'
        refquota_warning:
          $ref: '#/components/schemas/CompositeValue'
        readonly:
          $ref: '#/components/schemas/CompositeValue'
        recordsize:
          $ref: '#/components/schemas/CompositeValue'
        sync:
          $ref: '#/components/schemas/CompositeValue'
        snapdir:
          $ref: '#/components/schemas/CompositeValue'
        used:
          $ref: '#/components/schemas/CompositeValue'
        pbkdf2iters:
          $ref: '#/components/schemas/CompositeValue'
        origin:
          $ref: '#/components/schemas/CompositeValue'
        xattr:
          $ref: '#/components/schemas/CompositeValue'
        volsize:
          $ref: '#/components/schemas/CompositeValue'
        volblocksize:
          $ref: '#/components/schemas/CompositeValue'
      required:
      - id
      - name
      - pool
      - type
      type: object
    GroupsResponse:
      items:
        $ref: '#/components/schemas/Group'
      type: array
    GroupResponse:
      title: group_id
      type: integer
    Group:
      example:
        sudo_nopasswd: true
        id_type_both: true
        gid: 6
        builtin: true
        smb: true
        id: 0
        sudo: true
        users:
        - 1
        - 1
        local: true
        group: group
        sudo_commands:
        - sudo_commands
        - sudo_commands
      properties:
        id:
          type: integer
        gid:
          type: integer
        group:
          type: string
        builtin:
          type: boolean
        sudo:
          type: boolean
        sudo_nopasswd:
          type: boolean
        sudo_commands:
          items:
            type: string
          type: array
        smb:
          type: boolean
        users:
          items:
            type: integer
          type: array
        local:
          type: boolean
        id_type_both:
          type: boolean
      required:
      - group
      - id
      type: object
    NetworkConfig:
      example:
        httpproxy: httpproxy
        service_announcement:
          wsd: true
          netbios: true
          mdns: true
        hosts: hosts
        domains:
        - domains
        - domains
        ipv4gateway: ipv4gateway
        ipv6gateway: ipv6gateway
        hostname: hostname
        nameserver2: nameserver2
        nameserver3: nameserver3
        hostname_local: hostname_local
        netwait_ip:
        - netwait_ip
        - netwait_ip
        nameserver1: nameserver1
        domain: domain
        netwait_enabled: true
        id: 0
      properties:
        id:
          type: integer
        hostname:
          type: string
        domain:
          type: string
        ipv4gateway:
          type: string
        ipv6gateway:
          type: string
        nameserver1:
          type: string
        nameserver2:
          type: string
        nameserver3:
          type: string
        httpproxy:
          type: string
        netwait_enabled:
          type: boolean
        netwait_ip:
          items:
            type: string
          type: array
        hosts:
          type: string
        domains:
          items:
            type: string
          type: array
        service_announcement:
          $ref: '#/components/schemas/NetworkConfig_service_announcement'
        hostname_local:
          type: string
      type: object
    NetworkSummary:
      example:
        nameservers:
        - nameservers
        - nameservers
        ips:
          key:
            IPV6:
            - IPV6
            - IPV6
            IPV4:
            - IPV4
            - IPV4
        default_routes:
        - default_routes
        - default_routes
      properties:
        ips:
          additionalProperties:
            $ref: '#/components/schemas/NetworkSummary_ips_value'
          type: object
        default_routes:
          items:
            type: string
          type: array
        nameservers:
          items:
            type: string
          type: array
      type: object
    PoolsResponse:
      items:
        $ref: '#/components/schemas/Pool'
      type: array
    Pool:
      example:
        path: path
        healthy: true
        encryptkey_path: encryptkey_path
        name: name
        guid: guid
        id: 0
        is_decrypted: true
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        guid:
          type: string
        path:
          type: string
        status:
          type: string
        healthy:
          type: boolean
        is_decrypted:
          type: boolean
        encryptkey_path:
          type: string
      required:
      - id
      - name
      - path
      type: object
    Service:
      example:
        service: service
        enable: true
        id: 0
        state: state
        pids:
        - 6
        - 6
      properties:
        id:
          type: integer
        service:
          type: string
        enable:
          type: boolean
        state:
          type: string
        pids:
          items:
            type: integer
          type: array
      required:
      - id
      - service
      type: object
    ShareNFS:
      example:
        aliases:
        - aliases
        - aliases
        maproot_group: maproot_group
        hosts:
        - hosts
        - hosts
        networks:
        - networks
        - networks
        maproot_user: maproot_user
        enabled: true
        alldirs: true
        path: path
        mapall_user: mapall_user
        mapall_group: mapall_group
        security:
        - SYS
        - SYS
        comment: comment
        id: 0
        quiet: false
        ro: false
      properties:
        id:
          type: integer
        path:
          description: '`path` local path to be exported.'
          title: path
          type: string
        aliases:
          default: []
          description: "`aliases` IGNORED, for now."
          items:
            title: path
            type: string
          title: aliases
          type: array
        comment:
          default: ""
          type: string
        networks:
          default: []
          description: |-
            `networks` is a list of authorized networks that are allowed to access the share having format
            "network/mask" CIDR notation. If empty, all networks are allowed.
          items:
            title: network
            type: string
          title: networks
          type: array
        hosts:
          items:
            type: string
          type: array
        alldirs:
          type: boolean
        ro:
          default: false
          type: boolean
        quiet:
          default: false
          type: boolean
        maproot_user:
          nullable: true
          type: string
        maproot_group:
          nullable: true
          type: string
        mapall_user:
          nullable: true
          type: string
        mapall_group:
          nullable: true
          type: string
        security:
          items:
            enum:
            - SYS
            - KRB5
            - KRB5I
            - KRB5P
            type: string
          type: array
        enabled:
          default: true
          type: boolean
      required:
      - id
      - paths
      type: object
    ShareSMB:
      example:
        auxsmbconf: auxsmbconf
        purpose: purpose
        hostsdeny:
        - hostsdeny
        - hostsdeny
        path_suffix: path_suffix
        browsable: true
        aapl_name_mangling: true
        acl: true
        enabled: true
        durablehandle: true
        path: path
        id: 0
        locked: true
        hostsallow:
        - hostsallow
        - hostsallow
        shadowcopy: true
        abe: true
        streams: true
        fsrvp: true
        vuid: vuid
        home: true
        timemachine: true
        name: name
        comment: comment
        guestok: true
        ro: true
        recyclebin: true
      properties:
        id:
          type: integer
        path:
          type: string
        path_suffix:
          type: string
        purpose:
          type: string
        home:
          type: boolean
        timemachine:
          type: boolean
        name:
          type: string
        comment:
          type: string
        ro:
          type: boolean
        browsable:
          type: boolean
        recyclebin:
          type: boolean
        shadowcopy:
          type: boolean
        guestok:
          type: boolean
        abe:
          type: boolean
        hostsallow:
          items:
            type: string
          type: array
        hostsdeny:
          items:
            type: string
          type: array
        aapl_name_mangling:
          type: boolean
        acl:
          type: boolean
        durablehandle:
          type: boolean
        streams:
          type: boolean
        fsrvp:
          type: boolean
        auxsmbconf:
          type: string
        enabled:
          type: boolean
        locked:
          type: boolean
        vuid:
          type: string
      required:
      - id
      - path
      type: object
    SharesNFSResponse:
      items:
        $ref: '#/components/schemas/ShareNFS'
      type: array
    SharesSMBResponse:
      items:
        $ref: '#/components/schemas/ShareSMB'
      type: array
    User:
      example:
        sshpubkey: sshpubkey
        id_type_both: ""
        builtin: ""
        microsoft_account: ""
        smb: ""
        groups:
        - 5
        - 5
        password_disabled: ""
        local: ""
        home: home
        sudo_commands:
        - sudo_commands
        - sudo_commands
        uid: 6
        sudo_nopasswd: ""
        full_name: full_name
        smbhash: smbhash
        shell: shell
        unixhash: unixhash
        attributes:
          key: ""
        id: 0
        sudo: ""
        locked: ""
        email: email
        username: username
        group:
          bsdgrp_group: bsdgrp_group
          bsdgrp_builtin: ""
          bsdgrp_sudo_commands:
          - bsdgrp_sudo_commands
          - bsdgrp_sudo_commands
          bsdgrp_gid: 5
          bsdgrp_sudo_nopasswd: ""
          bsdgrp_smb: ""
          id: 1
          bsdgrp_sudo: ""
      properties:
        id:
          type: integer
        uid:
          type: integer
        username:
          type: string
        unixhash:
          type: string
        smbhash:
          type: string
        home:
          type: string
        shell:
          type: string
        full_name:
          type: string
        builtin:
          type: bool
        smb:
          type: bool
        password_disabled:
          type: bool
        locked:
          type: bool
        sudo:
          type: bool
        sudo_nopasswd:
          type: bool
        sudo_commands:
          items:
            type: string
          type: array
        microsoft_account:
          type: bool
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        email:
          nullable: true
          type: string
        group:
          $ref: '#/components/schemas/User_group'
        groups:
          items:
            type: integer
          type: array
        sshpubkey:
          nullable: true
          type: string
        local:
          type: bool
        id_type_both:
          type: bool
      required:
      - full_name
      - id
      - username
      type: object
    VMDevice:
      example:
        vm: 2
        dtype: NIC
        attributes:
          key: ""
        id: 9
        order: 3
      properties:
        id:
          type: integer
        dtype:
          enum:
          - NIC
          - DISK
          - CDROM
          - PCI
          - DISPLAY
          - RAW
          type: string
        attributes:
          additionalProperties: true
          properties: {}
          type: object
        order:
          type: integer
        vm:
          type: integer
      required:
      - dtype
      type: object
    UsersResponse:
      items:
        $ref: '#/components/schemas/User'
      type: array
    UserResponse:
      title: user_id
      type: integer
    UserShellChoices:
      additionalProperties:
        type: string
      type: object
    VM:
      example:
        memory: 1
        min_memory: 5
        hyperv_enlightenments: true
        shutdown_timeout: 7
        suspend_on_snapshot: true
        description: description
        autostart: true
        uuid: uuid
        command_line_args: command_line_args
        cores: 5
        pin_vcpus: true
        bootloader: bootloader
        cpu_model: cpu_model
        id: 0
        machine_type: machine_type
        arch_type: arch_type
        devices:
        - vm: 2
          dtype: NIC
          attributes:
            key: ""
          id: 9
          order: 3
        - vm: 2
          dtype: NIC
          attributes:
            key: ""
          id: 9
          order: 3
        nodeset: nodeset
        threads: 2
        cpuset: cpuset
        vcpus: 6
        ensure_display_device: true
        hide_from_msr: true
        name: name
        cpu_mode: cpu_mode
        time: time
        status:
          domain_state: domain_state
          pid: 4
          state: state
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        vcpus:
          type: integer
        memory:
          format: int64
          type: integer
        min_memory:
          format: int64
          type: integer
        autostart:
          type: boolean
        time:
          type: string
        bootloader:
          type: string
        cores:
          type: integer
        threads:
          type: integer
        hyperv_enlightenments:
          type: boolean
        shutdown_timeout:
          type: integer
        cpu_mode:
          type: string
        cpu_model:
          type: string
        cpuset:
          type: string
        nodeset:
          type: string
        pin_vcpus:
          type: boolean
        hide_from_msr:
          type: boolean
        suspend_on_snapshot:
          type: boolean
        ensure_display_device:
          type: boolean
        arch_type:
          type: string
        machine_type:
          type: string
        uuid:
          type: string
        command_line_args:
          type: string
        devices:
          items:
            $ref: '#/components/schemas/VMDevice'
          type: array
        status:
          $ref: '#/components/schemas/VM_status'
      required:
      - id
      - name
      type: object
    VMSResponse:
      items:
        $ref: '#/components/schemas/VM'
      type: array
    CreateDatasetParams_encryption_options:
      example:
        generate_key: true
        passphrase: passphrase
        key: key
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        generate_key:
          type: boolean
        passphrase:
          type: string
        key:
          type: string
      type: object
    NetworkConfig_service_announcement:
      example:
        wsd: true
        netbios: true
        mdns: true
      properties:
        netbios:
          type: boolean
        mdns:
          type: boolean
        wsd:
          type: boolean
      type: object
    NetworkSummary_ips_value:
      example:
        IPV6:
        - IPV6
        - IPV6
        IPV4:
        - IPV4
        - IPV4
      properties:
        IPV4:
          items:
            type: string
          type: array
        IPV6:
          items:
            type: string
          type: array
      type: object
    User_group:
      example:
        bsdgrp_group: bsdgrp_group
        bsdgrp_builtin: ""
        bsdgrp_sudo_commands:
        - bsdgrp_sudo_commands
        - bsdgrp_sudo_commands
        bsdgrp_gid: 5
        bsdgrp_sudo_nopasswd: ""
        bsdgrp_smb: ""
        id: 1
        bsdgrp_sudo: ""
      properties:
        id:
          type: integer
        bsdgrp_gid:
          type: integer
        bsdgrp_group:
          type: string
        bsdgrp_builtin:
          type: bool
        bsdgrp_sudo:
          type: bool
        bsdgrp_sudo_nopasswd:
          type: bool
        bsdgrp_sudo_commands:
          items:
            type: string
          type: array
        bsdgrp_smb:
          type: bool
      type: object
    VM_status:
      example:
        domain_state: domain_state
        pid: 4
        state: state
      properties:
        state:
          type: string
        pid:
          type: integer
        domain_state:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: APIKey
      scheme: bearer
      type: http
